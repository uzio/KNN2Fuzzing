# coding:utf-8
from kitty.model import Template
from kitty.interfaces.base import EmptyInterface
from ics_fuzzer import ICSFuzzer
from kitty.model import GraphModel
from katnip.targets.goose import EthTarget
from katnip.model.low_level.scapy import ScapyField
from protocols.goose import *

RANDSEED = int(RandShort())

INFO = {
    'title': 'IEC/ISO 61850 GOOSE协议goose id字段',
    'des':  'IEC/ISO 61850 GOOSE协议goose id字段',
    'id':   '1',
    'type': '1',
    'creator': 'shaoshuai',
    'create_time': '05/09/2019',
    'protocol': 'goose'
}


def fuzz(params):
    pdu = [
        0x80, 0x24, 0x53, 0x45, 0x4c, 0x5f, 0x33, 0x35,
        0x31, 0x5f, 0x31, 0x43, 0x46, 0x47, 0x2f, 0x4c,
        0x4c, 0x4e, 0x30, 0x24, 0x47, 0x4f, 0x24, 0x4e,
        0x65, 0x77, 0x47, 0x4f, 0x4f, 0x53, 0x45, 0x4d,
        0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x81, 0x02,
        0x07, 0xd0, 0x82, 0x1f, 0x53, 0x45, 0x4c, 0x5f,
        0x33, 0x35, 0x31, 0x5f, 0x31, 0x43, 0x46, 0x47,
        0x2f, 0x4c, 0x4c, 0x4e, 0x30, 0x24, 0x74, 0x68,
        0x72, 0x65, 0x65, 0x35, 0x31, 0x74, 0x6f, 0x32,
        0x34, 0x31, 0x31, 0x83, 0x09, 0x53, 0x45, 0x4c,
        0x5f, 0x33, 0x35, 0x31, 0x5f, 0x31, 0x84, 0x08,
        0x4f, 0x6c, 0x30, 0x64, 0x27, 0x3a, 0x39, 0x9f,
        0x85, 0x01, 0x17, 0x86, 0x02, 0x02, 0x09, 0x87,
        0x01, 0x00, 0x88, 0x01, 0x01, 0x89, 0x01, 0x00,
        0x8a, 0x01, 0x01, 0xab, 0x81, 0xdf, 0xa2, 0x81,
        0xdc, 0xa2, 0x12, 0x85, 0x01, 0x01, 0x84, 0x03,
        0x03, 0x00, 0x00, 0x91, 0x08, 0x4f, 0x6c, 0x2e,
        0x60, 0x4a, 0x58, 0x0d, 0x9f, 0xa2, 0x12, 0x85,
        0x01, 0x01, 0x84, 0x03, 0x03, 0x00, 0x00, 0x91,
        0x08, 0x4f, 0x6c, 0x2e, 0x60, 0x4a, 0x58, 0x0d,
        0x9f, 0xa2, 0x12, 0x85, 0x01, 0x01, 0x84, 0x03,
        0x03, 0x00, 0x00, 0x91, 0x08, 0x4f, 0x6c, 0x2e,
        0x60, 0x4a, 0x58, 0x0d, 0x9f, 0xa2, 0x12, 0x83,
        0x01, 0x00, 0x84, 0x03, 0x03, 0x00, 0x00, 0x91,
        0x08, 0x4f, 0x6c, 0x2e, 0x60, 0x4a, 0x58, 0x0d,
        0x9f, 0xa2, 0x12, 0x83, 0x01, 0x00, 0x84, 0x03,
        0x03, 0x00, 0x00, 0x91, 0x08, 0x4f, 0x6c, 0x2e,
        0x60, 0x4a, 0x58, 0x0d, 0x9f, 0xa2, 0x12, 0x83,
        0x01, 0x00, 0x84, 0x03, 0x03, 0x00, 0x00, 0x91,
        0x08, 0x4f, 0x6c, 0x2e, 0x60, 0x4a, 0x58, 0x0d,
        0x9f, 0xa2, 0x12, 0x83, 0x01, 0x00, 0x84, 0x03,
        0x03, 0x00, 0x00, 0x91, 0x08, 0x4f, 0x6c, 0x2e,
        0x60, 0x4a, 0x58, 0x0d, 0x9f, 0xa2, 0x12, 0x83,
        0x01, 0x00, 0x84, 0x03, 0x03, 0x00, 0x00, 0x91,
        0x08, 0x4f, 0x6c, 0x2e, 0x60, 0x4a, 0x58, 0x0d,
        0x9f, 0xa2, 0x12, 0x83, 0x01, 0x00, 0x84, 0x03,
        0x03, 0x00, 0x00, 0x91, 0x08, 0x4f, 0x6c, 0x2e,
        0x60, 0x4a, 0x58, 0x0d, 0x9f, 0xa2, 0x12, 0x83,
        0x01, 0x00, 0x84, 0x03, 0x03, 0x00, 0x00, 0x91,
        0x08, 0x4f, 0x6c, 0x2e, 0x60, 0x4a, 0x58, 0x0d,
        0x9f, 0xa2, 0x12, 0x83, 0x01, 0x00, 0x84, 0x03,
        0x03, 0x00, 0x00, 0x91, 0x08, 0x4f, 0x6c, 0x2e,
        0x60, 0x4a, 0x58, 0x0d, 0x9f
    ]
    pdu_s = ''
    for p in pdu:
        pdu_s += chr(p)

    pdu = GOOSEPDU(pdu_s)
    pdu.datset = VisibleString(str(RandString(10)))
    goose_packet = GOOSE()
    goose_packet.payload = Raw(pdu.pack())

    goose_packet_template = Template(name='init request template', fields=[
        ScapyField(goose_packet, name='init request', fuzzable=True, fuzz_count=params['FUZZ_COUNT']),
    ])

    model = GraphModel()
    model.connect(goose_packet_template)
    target = EthTarget(name='goose target',targetIP=params['TARGET_IP'])
    target.set_expect_response(False)
    fuzzer = ICSFuzzer(params)
    fuzzer.set_interface(EmptyInterface())
    fuzzer.set_model(model)
    fuzzer.set_skip_env_test()
    fuzzer.set_target(target)
    fuzzer.set_delay_between_tests(1)
    fuzzer.start()
    fuzzer.stop()


if __name__ == '__main__':

    params={'FUZZ_COUNT':2,
            'DELAY':1,
            'TARGET_IP':'192.168.1.150',
            'TIME_OUT':2,
            }
    fuzz(params)

